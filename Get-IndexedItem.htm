<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 14 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Lucida Console";
	panose-1:2 11 6 9 4 5 4 2 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:24.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Cambria","serif";
	color:#365F91;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:"Cambria","serif";
	color:#4F81BD;}
h3
	{mso-style-link:"Heading 3 Char";
	margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Cambria","serif";
	color:#4F81BD;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:36.0pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:36.0pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;}
span.Codex
	{mso-style-name:"Code x";
	font-family:"Lucida Console";}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:bold;}
span.Code
	{mso-style-name:Code;
	font-family:"Lucida Console";}
span.CodeBlue
	{mso-style-name:"Code + Blue";
	font-family:"Lucida Console";
	color:blue;}
span.CodeViolet
	{mso-style-name:"Code + Violet";
	font-family:"Lucida Console";
	color:purple;}
span.CodeBold
	{mso-style-name:"Code + Bold";
	font-family:"Lucida Console";
	font-weight:bold;}
span.CodeCustomColorRGB00139
	{mso-style-name:"Code + Custom Color\(RGB\(00139\)\)";
	font-family:"Lucida Console";
	color:darkblue;}
span.CodeCustomColorRGB01000
	{mso-style-name:"Code + Custom Color\(RGB\(01000\)\)";
	font-family:"Lucida Console";
	color:darkgreen;}
span.CodeCustomColorRGB13843226
	{mso-style-name:"Code + Custom Color\(RGB\(13843226\)\)";
	font-family:"Lucida Console";
	color:blueviolet;}
span.CodeCustomColorRGB13900
	{mso-style-name:"Code + Custom Color\(RGB\(13900\)\)";
	font-family:"Lucida Console";
	color:darkred;}
span.CodeCustomColorRGB169169169
	{mso-style-name:"Code + Custom Color\(RGB\(169169169\)\)";
	font-family:"Lucida Console";
	color:darkgray;}
span.CodeDarkBlue
	{mso-style-name:"Code + Dark Blue";
	font-family:"Lucida Console";
	color:navy;}
span.CodeCustomColorRGB173216230
	{mso-style-name:"Code + Custom Color\(RGB\(173216230\)\)";
	font-family:"Lucida Console";
	color:lightblue;}
span.CodeItalic
	{mso-style-name:"Code + Italic";
	font-family:"Lucida Console";
	font-style:italic;}
span.CodexRed
	{mso-style-name:"Code x + Red";
	font-family:"Lucida Console";
	color:red;}
span.CodeRed
	{mso-style-name:"Code + Red";
	font-family:"Lucida Console";
	color:red;}
span.CodeTeal
	{mso-style-name:"Code + Teal";
	font-family:"Lucida Console";
	color:teal;}
p.CodeBlock, li.CodeBlock, div.CodeBlock
	{mso-style-name:"Code Block";
	margin:0cm;
	margin-bottom:.0001pt;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
.MsoChpDefault
	{font-family:"Calibri","sans-serif";}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:72.0pt 72.0pt 72.0pt 72.0pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=EN-GB link=blue vlink=purple>

<div class=WordSection1>

<h1>Using the Windows index to search from PowerShell:<br>
Part one: Building a query from user input.</h1>

<p class=MsoNormal>I've spent some time developing and honing a PowerShell
function that gets information from the Windows Index– the technology behind
the search that is integrated into explorer in Windows 7 and Vista. The Index
can be queried using SQL and my function builds the SQL query from user input, executes
it and receives rows of data for all the matching items. In Part three, I'll look
at why rows of data aren't the best thing for the function to return and what the
alternatives might be. Part two will look at making user input easier – I don't
want to make an understanding SQL a prerequisite for using the function. In this
part I'm going to explore the query process. </p>

<p class=MsoNormal>We'll look at how at how the query is built in a moment, for
now please accept that a ready-to-run query stored in the variable <span
class=Code><span style='font-size:9.0pt;line-height:115%'>$SQL.</span></span>
Then it only takes a few lines of PowerShell to prepare and run the query</p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$Provider</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Provider=Search.CollatorDSO;Extended
Properties=’Application=Windows’;&quot;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$adapter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeBlue><span style='font-size:9.0pt'>new-object</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13843226><span style='font-size:9.0pt'>system.data.oledb.oleDBDataadapter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-argument</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$sql</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Provider</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$ds</span></span><span class=Code><span
style='font-size:9.0pt'>      </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>new-object</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13843226><span
style='font-size:9.0pt'>system.data.dataset</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$adapter</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Fill(</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$ds</span></span><span class=Code><span
style='font-size:9.0pt'>)) { </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$ds</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Tables</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeViolet><span style='font-size:9.0pt'>0</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=Code><span style='font-size:9.0pt'> }</span></span> </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The data is fetched using <span class=Code><span
style='font-size:9.0pt;line-height:115%'>oleDBDataAdapter</span></span> and <span
class=Code><span style='font-size:9.0pt;line-height:115%'>DataSet</span></span>
objects; the adapter is created specifying a &quot;provider&quot; which says <i>where</i>
the data will come from and a SQL statement which says <i>what</i> is being
requested. The query is run when the adapter is told to <i>fill </i>the dataset.
The <span class=Code><span style='font-size:9.0pt;line-height:115%'>.fill()</span></span>
method returns a number, indicating how many data rows were returned by the
query – if this is non-zero, my function returns the first table in the
dataset. PowerShell sees each data row in the table as a separate object; and
these objects have a property for each of the table's columns, so a search
might return something like this:</p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.ITEMNAME               
: DIVE_1771+.JPG</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.ITEMURL                
: file:C:/Users/James/pictures/DIVE_1771+.JPG</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.FILEEXTENSION          
: .JPG</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.FILENAME             
  : DIVE_1771+.JPG</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.FILEATTRIBUTES         
: 32</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.FILEOWNER              
: Inspiron\James</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.ITEMTYPE               
: .JPG</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.ITEMTYPETEXT           
: JPEG Image</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.KINDTEXT               
: Picture</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.KIND                  
 : {picture}</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.MIMETYPE               
: image/jpeg</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.SIZE                   
: 971413</span></span></p>

<p class=MsoNormal>There are <u>lots</u> of fields to choose from, so the list
might be longer. The SQL query to produce it looks something like this. </p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>SELECT System.ItemName, System.ItemUrl,
System.FileExtension, System.FileName, System.FileAttributes, System.FileOwner,
System.ItemType, System.ItemTypeText , System.KindText, System.Kind,
System.MIMEType, System.Size  </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>FROM SYSTEMINDEX </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>WHERE System.Keywords = 'portfolio' AND Contains(*,'stingray')</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>In the finished version of the function, the SELECT clause
has 60 or so fields; the FROM and WHERE clauses might be more complicated than
in the example and an ORDER BY clause might be used to sort the data. The
clauses are built using parameters which are declared in my function like this:
</p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>Param</span></span><span
class=Code><span style='font-size:9.0pt'> ( </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeCustomColorRGB173216230><span style='font-size:9.0pt'>Alias</span></span><span
class=Code><span style='font-size:9.0pt'>(</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Where&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Include&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>][String[]]</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Filter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>        </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeCustomColorRGB173216230><span style='font-size:9.0pt'>Alias</span></span><span
class=Code><span style='font-size:9.0pt'>(</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Sort&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>][String[]]</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$orderby</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>        </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeCustomColorRGB173216230><span style='font-size:9.0pt'>Alias</span></span><span
class=Code><span style='font-size:9.0pt'>(</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Top&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>][String[]]</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$First</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>        [String]</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>        [Switch]</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Recurse</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>)</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>In my functions I try to <b>use names already used in PowerShell</b>,
so here I use -<span class=Code><span style='font-size:9.0pt;line-height:115%'>Filter</span></span>
and <span class=Code><span style='font-size:9.0pt;line-height:115%'>-First</span></span>
but I also define aliases for SQL terms like <span class=Code><span
style='font-size:9.0pt;line-height:115%'>WHERE</span></span> and <span
class=Code><span style='font-size:9.0pt;line-height:115%'>TOP</span></span>. These
parameters build into the complete SQL statement, starting with the SELECT
clause which uses <span class=Code><span style='font-size:9.0pt;line-height:
115%'>-First</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$First</span></span><span class=Code><span
style='font-size:9.0pt'>)  {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;SELECT TOP $First &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>else</span></span><span
class=Code><span style='font-size:9.0pt'>         {</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;SELECT &quot;</span></span><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; System.ItemName, System.ItemUrl &quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB01000><span style='font-size:9.0pt'># and the other 58
fields</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>If the user specifies <span class=Code><span
style='font-size:9.0pt;line-height:115%'>–First 1</span></span> then <span
class=Code><span style='font-size:9.0pt;line-height:115%'>$SQL</span></span>
will be &quot;<span class=Code><span style='font-size:9.0pt;line-height:115%'>SELECT
TOP 1 </span></span><span class=CodeItalic><span style='font-size:9.0pt;
line-height:115%'>fields</span></span>&quot;; otherwise it's just &quot;<span
class=Code><span style='font-size:9.0pt;line-height:115%'>SELECT </span></span><span
class=CodeItalic><span style='font-size:9.0pt;line-height:115%'>fields</span></span><span
class=Code><span style='font-size:9.0pt;line-height:115%'>&quot;. </span></span>After
the fields are added to <span class=Code><span style='font-size:9.0pt;
line-height:115%'>$SQL</span></span>, the function adds a <span class=Code><span
style='font-size:9.0pt;line-height:115%'>FROM</span></span> clause. Windows Search
can interrogate remote computers, so if the <span class=Code><span
style='font-size:9.0pt;line-height:115%'>-path </span></span>parameter is a UNC
name in the form <span class=CodeItalic><span style='font-size:9.0pt;
line-height:115%'>\\computerName\shareName </span></span>the SQL <span
class=Code><span style='font-size:9.0pt;line-height:115%'>FROM</span></span>
clause becomes <span class=Code><span style='font-size:9.0pt;line-height:115%'>FROM</span></span>&nbsp;<span
class=CodeItalic><span style='font-size:9.0pt;line-height:115%'>computerName</span></span><span
class=Code><span style='font-size:9.0pt;line-height:115%'>.SYSTEMINDEX </span></span>otherwise
it is<span class=Code><span style='font-size:9.0pt;line-height:115%'> FROM
SYSTEMINDEX</span></span> to search the local machine. <br>
A regular expression can recognise a UNC name and pick out the computer name,
like this:</p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-match</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;\\\\([^\\]+)\\.&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>) {</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>      </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$sql</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;FROM $($matches[1]).SYSTEMINDEX WHERE &quot;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>} </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>else</span></span><span
class=Code><span style='font-size:9.0pt'> {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$sql</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; FROM SYSTEMINDEX WHERE &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=MsoNormal style='line-height:12.0pt'>&nbsp;</p>

<p class=MsoNormal>The regular expression in the first line of the example breaks
down like this </p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=146 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Regular expression</p>
  </td>
  <td width=298 valign=top style='width:7.0cm;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Meaning</p>
  </td>
  <td width=249 valign=top style='width:166.1pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Application </p>
  </td>
 </tr>
 <tr>
  <td width=146 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'><b><u>\\\\</u></b>([^\\]+)\\.</p>
  </td>
  <td width=298 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>2 \ characters: &quot;\&quot; is the escape character, so each one
  needs to be written as \\</p>
  </td>
  <td width=249 valign=top style='width:166.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'><b><u>\\</u></b>computerName\shareName </p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=146 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>\\\\(<b><u>[^\\]+</u></b>)\\.</p>
  </td>
  <td width=298 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Any non-\ character, repeated at least once </p>
  </td>
  <td width=249 valign=top style='width:166.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>\\<b><u>computerName</u></b>\shareName </p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=146 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>&quot;\\\\([^\\]+)<b><u>\\.</u></b>&quot;</p>
  </td>
  <td width=298 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>A \,followed by <i>any</i> character </p>
  </td>
  <td width=249 valign=top style='width:166.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>\\computerName<b><u>\s</u></b>hareName  </p>
  </td>
 </tr>
 <tr>
  <td width=146 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>&quot;\\\\<b><u>(</u></b>[^\\]+<b><u>)</u></b>\\.&quot;</p>
  </td>
  <td width=298 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Capture the section which is enclosed by the brackets as a match</p>
  </td>
  <td width=249 valign=top style='width:166.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>$matches[0] =\\computerName\s</p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>$matches[1] =<b><u>computerName</u></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>I allow the function to take different parts of the <span
class=Code><span style='font-size:9.0pt;line-height:115%'>WHERE</span></span>
clause as a comma separated list, so that<br>
<span class=Code><span style='font-size:9.0pt;line-height:115%'>-filter &quot;System.Keywords
= 'portfolio'&quot;,&quot;Contains(*,'stingray')&quot; <br>
</span></span>is equivalent to <br>
<span class=Code><span style='font-size:9.0pt;line-height:115%'>-filter
&quot;System.Keywords = 'portfolio' AND Contains(*,'stingray')&quot; </span></span></p>

<p class=MsoNormal>Adding the filter just needs this:</p>

<p class=CodeBlock><span class=CodeCustomColorRGB00139><span style='font-size:
9.0pt'>if</span></span><span class=Code><span style='font-size:9.0pt'> (</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Filter</span></span><span
class=Code><span style='font-size:9.0pt'>) { </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Filter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-join</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; AND &quot;</span></span><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The folders searched can be restricted. A &quot;<span
class=Code><span style='font-size:9.0pt;line-height:115%'>SCOPE</span></span>&quot;
term limits the query to a folder and all of its subfolders, and a &quot;<span
class=Code><span style='font-size:9.0pt;line-height:115%'>DIRECTORY</span></span>&quot;
term limits it to the folder <u>without</u> subfolders. If the request is going
to a remote server the index is smart enough to recognise a UNC path and return
just the files which are accessible via that path. If a <span class=Code><span
style='font-size:9.0pt;line-height:115%'>-Path</span></span> parameter is specified,
the function extends the <span class=Code><span style='font-size:9.0pt;
line-height:115%'>WHERE</span></span> clause, and the <span class=Code><span
style='font-size:9.0pt;line-height:115%'>–Recurse</span></span> switch
determines whether to use <span class=Code><span style='font-size:9.0pt;
line-height:115%'>SCOPE </span></span>or <span class=Code><span
style='font-size:9.0pt;line-height:115%'>DIRECTORY</span></span>, like this: </p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'>){</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>   if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-notmatch</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;\w{4}:&quot;</span></span><span class=Code><span
style='font-size:9.0pt'>) {</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>       </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;file:&quot;</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+</span></span><span class=Code><span style='font-size:
9.0pt'> (</span></span><span class=CodeBlue><span style='font-size:9.0pt'>resolve-path</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-path</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'>)</span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>.</span></span><span class=Code><span style='font-size:
9.0pt'>providerPath</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>   } </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>   </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>if</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$sql</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-notmatch</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;WHERE\s*$&quot;</span></span><span class=Code><span
style='font-size:9.0pt'>) {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$sql</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; AND &quot;</span></span><span class=Code><span
style='font-size:9.0pt'> } </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>   </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>if</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Recurse</span></span><span class=Code><span
style='font-size:9.0pt'>)                   {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$sql</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; SCOPE = '$Path' &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>    }</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>   </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>else</span></span><span class=Code><span
style='font-size:9.0pt'>                            {</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$sql</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; DIRECTORY = '$Path' &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>In these SQL statements, paths are specified in the form <span
class=Code><span style='font-size:9.0pt;line-height:115%'>file:c:/users/james</span></span>
which isn't how we normally write them (and the way I recognise UNC names won't
work if they are written as <span class=Code><span style='font-size:9.0pt;
line-height:115%'>file://ComputerName/shareName</span></span>). This is
rectified by the first line inside the <span class=Code><span style='font-size:
9.0pt;line-height:115%'>If ($Path) {}</span></span> block, which checks for 4
&quot;word&quot; characters followed by a colon. Doing this will prevent 'File:'
being inserted if any protocol has been specified –the same search syntax works
against HTTP:// (though not usually when searching on your workstation),
MAPI:// (for Outlook items) and OneIndex14:// (for OneNote items). If a file
path has been given I ensure it is an absolute one – the need to support UNC paths
forces the use of <span class=Code><span style='font-size:9.0pt;line-height:
115%'>.ProviderPath</span></span> here. It turns out there is no need to
convert \ characters in the path to /, provided the <span class=Code><span
style='font-size:9.0pt;line-height:115%'>file:</span></span> is included. <br>
After taking care of that, the operation <span class=Code><span
style='font-size:9.0pt;line-height:115%'>-notmatch &quot;WHERE\s*$&quot; </span></span>sees
to it that an &quot;<span class=Code><span style='font-size:9.0pt;line-height:
115%'>AND</span></span>&quot; is added if there is anything other than spaces
between <span class=Code><span style='font-size:9.0pt;line-height:115%'>WHERE</span></span>
and the end of the line (in other words if any conditions specified by <span
class=Code><span style='font-size:9.0pt;line-height:115%'>–filter</span></span>
have been inserted). If neither <span class=Code><span style='font-size:9.0pt;
line-height:115%'>-Path</span></span> nor <span class=Code><span
style='font-size:9.0pt;line-height:115%'>-filter</span></span> was specified
there will be a dangling <span class=Code><span style='font-size:9.0pt;
line-height:115%'>WHERE </span></span>at the end of the SQL statement
.Initially I removed this with a <span class=Code><span style='font-size:9.0pt;
line-height:115%'>&#8209;Replace</span></span> but then I decided that I didn't
want the function to respond to a lack of input by returning the whole index so
I changed it to write a warning and exit. With the <span class=Code><span
style='font-size:9.0pt;line-height:115%'>WHERE </span></span>clause completed, final
clause in the SQL statement is <span class=Code><span style='font-size:9.0pt;
line-height:115%'>ORDER BY</span></span>, which - like <span class=Code><span
style='font-size:9.0pt;line-height:115%'>WHERE</span></span> – joins up a
multi-part condition.</p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$sql</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-match</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;WHERE\s*$&quot;</span></span><span class=Code><span
style='font-size:9.0pt'>)  {</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>   </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>Write-warning</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;You need to specify either a path, or a
filter.&quot;</span></span><span class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>   </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>Return</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$orderby</span></span><span class=Code><span
style='font-size:9.0pt'>) { </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$sql</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; ORDER BY &quot;</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+</span></span><span class=Code><span style='font-size:
9.0pt'> (</span></span><span class=CodeRed><span style='font-size:9.0pt'>$OrderBy</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-join</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot; , &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>) } </span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>When the whole function is put together it takes 3 dozen
lines of PowerShell to handle the parameters, build and run the query and
return the result. Put together they look like this:</p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>Function</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13843226><span style='font-size:9.0pt'>Get-IndexedItem</span></span><span
class=Code><span style='font-size:9.0pt'>{</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>Param</span></span><span
class=Code><span style='font-size:9.0pt'> ( </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeCustomColorRGB173216230><span style='font-size:9.0pt'>Alias</span></span><span
class=Code><span style='font-size:9.0pt'>(</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Where&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Include&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=CodeTeal><span style='font-size:9.0pt'>[String[]]</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Filter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>        </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeCustomColorRGB173216230><span style='font-size:9.0pt'>Alias</span></span><span
class=Code><span style='font-size:9.0pt'>(</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Sort&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=CodeTeal><span style='font-size:9.0pt'>[String[]]</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$OrderBy</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>        </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeCustomColorRGB173216230><span style='font-size:9.0pt'>Alias</span></span><span
class=Code><span style='font-size:9.0pt'>(</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Top&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=CodeTeal><span style='font-size:9.0pt'>[String[]]</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$First</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>        </span></span><span class=CodeTeal><span
style='font-size:9.0pt'>[String]</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>        </span></span><span class=CodeTeal><span
style='font-size:9.0pt'>[Switch]</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Recurse</span></span><span class=Code><span
style='font-size:9.0pt'> )</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$First</span></span><span class=Code><span
style='font-size:9.0pt'>)  {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;SELECT TOP $First &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>else</span></span><span
class=Code><span style='font-size:9.0pt'>         {</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;SELECT &quot;</span></span><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; System.ItemName, System.ItemUrl &quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB01000><span style='font-size:9.0pt'># and the other 58
fields</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-match</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;\\\\([^\\]+)\\.&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>) {</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>      </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;FROM $($matches[1]).SYSTEMINDEX WHERE &quot;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>} </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>else</span></span><span
class=Code><span style='font-size:9.0pt'> {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; FROM SYSTEMINDEX WHERE &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Filter</span></span><span class=Code><span
style='font-size:9.0pt'>) { </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Filter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-join</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; AND &quot;</span></span><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'>)   {</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>if</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-notmatch</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;\w{4}:&quot;</span></span><span class=Code><span
style='font-size:9.0pt'>)  {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;file:&quot;</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeRed><span style='font-size:9.0pt'>$Path</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeRed><span style='font-size:9.0pt'>$Path</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-replace</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\\&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;/&quot;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>if</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-notmatch</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;WHERE\s*$&quot;</span></span><span class=Code><span
style='font-size:9.0pt'>) {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; AND &quot;</span></span><span class=Code><span
style='font-size:9.0pt'> } </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>if</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Recurse</span></span><span class=Code><span
style='font-size:9.0pt'>)                   {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; SCOPE = '$Path' &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>    }</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>else</span></span><span class=Code><span
style='font-size:9.0pt'>                            {</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; DIRECTORY = '$Path' &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-match</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;WHERE\s*$&quot;</span></span><span class=Code><span
style='font-size:9.0pt'>)  {</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>   </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>Write-Warning</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;You need to specify either a path or a
filter.&quot;</span></span><span class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>   </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>Return</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$OrderBy</span></span><span class=Code><span
style='font-size:9.0pt'>) { </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; ORDER BY &quot;</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+</span></span><span class=Code><span style='font-size:
9.0pt'> (</span></span><span class=CodeRed><span style='font-size:9.0pt'>$OrderBy</span></span><span
class=Code><span style='font-size:9.0pt'>   </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-join</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot; , &quot;</span></span><span
class=Code><span style='font-size:9.0pt'> ) } </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$Provider</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Provider=Search.CollatorDSO;Extended
Properties=’Application=Windows’;&quot;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$Adapter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeBlue><span style='font-size:9.0pt'>New-Object</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13843226><span style='font-size:9.0pt'>system.data.oledb.oleDBDataadapter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-argument</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Provider</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$DS</span></span><span class=Code><span
style='font-size:9.0pt'>      </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>New-Object</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13843226><span
style='font-size:9.0pt'>system.data.dataset</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Adapter</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Fill(</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$DS</span></span><span class=Code><span
style='font-size:9.0pt'>)) { </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$DS</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Tables</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeViolet><span style='font-size:9.0pt'>0</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=Code><span style='font-size:9.0pt'> } </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The <span class=Code><span style='font-size:9.0pt;
line-height:115%'>-Path</span></span> parameter is more user-friendly as a
result of the way I handle it, but I've made it a general rule that <b>you
shouldn't expect the user to know too much of the underlying syntax</b> ,and at
the moment the function requires too much knowledge of SQL: I don't want to
type </p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>Get-Indexed-Item –Filter &quot;Contains(*,'Stingray')&quot;,
&quot;System.Photo.CameraManufacturer Like 'Can%'&quot; </span></span></p>

<p class=MsoNormal>and it seems unreasonable to expect anyone else to do so. I
came up with this list of things the function should do for me. </p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Don't require the user to know whether a search term is prefixed
with SYSTEM. SYSTEM.DOCUMENT, SYSTEM.IMAGE or SYSTEM.PHOTO. <u>If the prefix is
omitted put the correct one in</u>. </p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Even without the prefixes some fieldnames are awkward for example
&quot;HorizontalSize&quot; and &quot;VerticalSize&quot; instead of width and
height. <u>Provide aliases</u> </p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Literal text in searches needs to be enclosed in single quotes, <u>insert
quotes if the user omits them. </u></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>A free text search over all fields is written as
Contains(*,'searchTerm') , <u>convert &quot;orphan&quot; search terms into <i>contains</i>
conditions.</u></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>SQL uses % (not *) for a wild card – <u>replace* with % in filters</u>
to cope with users putting the familiar *</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>SQL requires the LIKE predicate(not =) for wildcards : <u>replace
= with like for Wildcards</u></p>

<p class=MsoNormal>In Part two, I'll look at how I do those things. </p>

<h1>Part Two – Helping with user input</h1>

<p class=MsoNormal>In part one I developed a working PowerShell function to
query the Windows index. It outputs <i>data rows</i> which isn't the ideal
behaviour and I'll address in part three; in this part I'll address another
drawback: <b>search terms passed as parameters to the function must be
&quot;SQL-Ready&quot;</b>. I think that makes for a <b>bad user experience</b>
so I'm going to look at the half dozen bits of logic I added to allow my function
to process input which is a little more human. <i>Regular expressions</i> are the
way to recognize text which must be changed, and I'll pay particular attention
to those as I know I lot of people find them daunting. </p>

<h2>Replace* with %</h2>

<p class=MsoNormal>SQL statements use % for wildcard, but selecting files at
the command prompt traditionally uses *. It's a simple matter to replace – but
for the need to &quot;escape&quot; the* character, replacing * with % would be
as simple as a <span class=Code><span style='font-size:9.0pt;line-height:115%'>–replace</span></span>
statement gets: <br>
<span class=CodeRed><span style='font-size:9.0pt;line-height:115%'>$Filter</span></span><span
class=Code><span style='font-size:9.0pt;line-height:115%'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt;line-height:
115%'>=</span></span><span class=Code><span style='font-size:9.0pt;line-height:
115%'> </span></span><span class=CodeRed><span style='font-size:9.0pt;
line-height:115%'>$Filter</span></span><span class=Code><span style='font-size:
9.0pt;line-height:115%'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt;line-height:115%'>-replace</span></span><span
class=Code><span style='font-size:9.0pt;line-height:115%'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt;line-height:115%'>&quot;\*&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt;line-height:
115%'>,</span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt;line-height:115%'>&quot;%&quot;</span></span></p>

<p class=MsoNormal>For some reason I'm never sure if the camera maker is Canon
or Cannon so I'd rather search for Can*… or rather Can%, and that replace
operation will turn &quot;<span class=Code><span style='font-size:9.0pt;
line-height:115%'>CameraManufacturer=Can*</span></span>&quot; into &quot;<span
class=Code><span style='font-size:9.0pt;line-height:115%'>CameraManufacturer=Can%</span></span>&quot;.
It's worth noting that <span class=Code><span style='font-size:9.0pt;
line-height:115%'>–replace</span></span> is just as happy to process an array
of strings in <span class=Code><span style='font-size:9.0pt;line-height:115%'>$filter</span></span>
as it is to process one. </p>

<p class=MsoNormal>Searching for a term across all fields uses &quot;<span
class=Code><span style='font-size:9.0pt;line-height:115%'>CONTAINS
(*,'Stingray'</span></span>)&quot;, and if the <span class=Code><span
style='font-size:9.0pt;line-height:115%'>-replace</span></span> operation changes*
to % <i>inside</i> a <span class=Code><span style='font-size:9.0pt;line-height:
115%'>CONTAINS()</span></span> the result is no longer a valid SQL statement.
So the regular expression needs to be a little more sophisticated, using a
&quot;negative look behind&quot;</p>

<p class=MsoNormal><span class=CodeRed><span style='font-size:9.0pt;line-height:
115%'>$Filter</span></span><span class=Code><span style='font-size:9.0pt;
line-height:115%'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt;line-height:115%'>=</span></span><span class=Code><span
style='font-size:9.0pt;line-height:115%'> </span></span><span class=CodeRed><span
style='font-size:9.0pt;line-height:115%'>$Filter</span></span><span class=Code><span
style='font-size:9.0pt;line-height:115%'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt;line-height:
115%'>-replace</span></span><span class=Code><span style='font-size:9.0pt;
line-height:115%'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt;line-height:115%'>&quot;</span></span> <span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt;line-height:115%'>&quot;(?&lt;!\(\s*)\*&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt;line-height:
115%'>,</span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt;line-height:115%'>&quot;%&quot;</span></span></p>

<p class=MsoNormal>In order to filter out cases like <span class=Code><span
style='font-size:9.0pt;line-height:115%'>CONTAINS(*…</span></span> , the new
regular expression qualifies <i>&quot;Match on *</i>&quot;,with a look behind <span
class=Code><span style='font-size:9.0pt;line-height:115%'>&quot;</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt;line-height:115%'>(?&lt;!\(\s*)</span></span><span
class=Code><span style='font-size:9.0pt;line-height:115%'>&quot;</span></span> which
says &quot;<i>if it isn’t  immediately preceded by an opening bracket and any
spaces</i>&quot;. In regular expression syntax <span class=Code><span
style='font-size:9.0pt;line-height:115%'>(?= x)</span></span> says &quot;<i>look
ahead for x</i>&quot; and <span class=Code><span style='font-size:9.0pt;
line-height:115%'>(?&lt;= x)</span></span> says &quot;<i>Look behind for x</i>&quot;
<span class=Code><span style='font-size:9.0pt;line-height:115%'>(?!= x)</span></span>
is “<i>look ahead for anything EXCEPT x” and </i><span class=Code><span
style='font-size:9.0pt;line-height:115%'>(?&lt;!x)</span></span> is <i>“look
behind for anything EXCEPT x” </i>these will see a lot of use in this function.
Here <span class=Code><span style='font-size:9.0pt;line-height:115%'>(?&lt;!   
) </span></span>is being used, open bracket needs to be escaped so is written
as <span class=Code><span style='font-size:9.0pt;line-height:115%'>\( </span></span>and
<span class=Code><span style='font-size:9.0pt;line-height:115%'>\s* </span></span>means
0 or more spaces. </p>

<h2>Convert &quot;orphan&quot; search terms into 'contains' conditions.</h2>

<p class=MsoNormal>A term that needs to be wrapped as a &quot;<span class=Code><span
style='font-size:9.0pt;line-height:115%'>CONTAINS</span></span>&quot; search
can be identified by the absence of quote marks, = , &lt; or &gt; signs or the <span
class=Code><span style='font-size:9.0pt;line-height:115%'>LIKE, CONTAINS</span></span>
or <span class=Code><span style='font-size:9.0pt;line-height:115%'>FREETEXT </span></span>search
predicates. When these are present the search term is left alone, otherwise it
goes into <span class=Code><span style='font-size:9.0pt;line-height:115%'>CONTAINS</span></span>,
like this. </p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$filter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> (</span></span><span class=CodeRed><span style='font-size:9.0pt'>$filter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>|</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>ForEach-Object</span></span><span class=Code><span
style='font-size:9.0pt'> {</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>                 </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$_</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-match</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;'|=|&lt;|&gt;|like|contains|freetext&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>) {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$_</span></span><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>                 </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>else</span></span><span
class=Code><span style='font-size:9.0pt'> {</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Contains(*,'$_')&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>                }) </span></span></p>

<h2>Put quotes in if the user omits them. </h2>

<p class=MsoNormal>The next thing I check for is omitted quote marks. I said I
wanted to be able to use <span class=Code><span style='font-size:9.0pt;
line-height:115%'>Can*</span></span>, and we’ve seen it changed to <span
class=Code><span style='font-size:9.0pt;line-height:115%'>Can%</span></span>
but the search term needs to be transformed into &quot;<span class=Code><span
style='font-size:9.0pt;line-height:115%'>CameraManufacturer='Can%'</span></span>
&quot;. Here is a <span class=Code><span style='font-size:9.0pt;line-height:
115%'>–replace</span></span> operation to do that. </p>

<p class=MsoNormal style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$Filter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeRed><span style='font-size:9.0pt'>$Filter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-replace</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\s*(=|&lt;|&gt;|like)\s*([^'\d][^\s']*)$&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>' $1 ''$2'' '</span></span></p>

<p class=MsoNormal>This is a more complex regular expression which takes a few moments
to understand</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'><b>Regular expression</b></p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'><b>Meaning</b></p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'><b>Application </b></p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'><b><u>\s*</u></b>(=|&lt;|&gt;|like)<b><u>\s*</u></b><br>
  ([^'\d][^\s']*)$</p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>Any spaces (or none)</p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid;text-autospace:none'>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>\s*<b>(=|&lt;|&gt;|like)</b>\s*<br>
  ([^'\d][^s']*)$</p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>= or &lt; or &gt; or &quot;Like&quot; </p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>CameraManufacturer<b><u>=</u></b>Can% </p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>\s*(=|&lt;|&gt;|like)\s*<br>
  (<b><u>[^'\d]</u></b>[^\s']*)$</p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>Anything which is NOT a ' character or a digit</p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>CameraManufacturer=<b><u>C</u></b>an%</p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>\s*(=|&lt;|&gt;|like)\s*<br>
  ([^'\d]<b><u>[^\s']*</u></b>)$</p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>Any number of non-quote, non-space characters
  (or none)</p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>CameraManufacturer=C<b><u>an%</u></b></p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>\s*(=|&lt;|&gt;|like)\s*<br>
  ([^'\d][^\s']*)<b><u>$</u></b></p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>End of line</p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid;text-autospace:none'><i>&nbsp;</i></p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>\s*<b><u>(</u></b>=|&lt;|&gt;|like<b><u>)</u></b>\s*<br>
  <b><u>(</u></b>[^'\d][^\s']*<b><u>)</u></b>$</p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>Capture the enclosed sections as matches</p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;page-break-after:avoid'>$Matches[0]=  &quot;=Can%&quot;<br>
  $Matches[1]=  &quot;=&quot;<br>
  $Matches[2]=  &quot;Can%&quot;</p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>' $1 ''$2'' '0</p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Replace Matches[0] (&quot;=Can%&quot;) with an expression which uses  the
  two submatches &quot;=&quot; and &quot;can%&quot;. </p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'> = 'Can%' </p>
  </td>
 </tr>
</table>

<p class=MsoNormal>Note that the expression which is being inserted uses $1 and
$2 to mean matches[1] and[2] – if this is wrapped in double quote marks
PowerShell will try to evaluate these terms before they get to the regex
handler, so the replacement string must be wrapped in single quotes. But the
desired replacement text <i>contains</i> single quote marks, so they need to be
doubled up.</p>

<h2>Replace '=' with 'like' for Wildcards</h2>

<p class=MsoNormal>So far,<span class=Code><span style='font-size:9.0pt;
line-height:115%'> =Can*</span></span> has become <span class=Code><span
style='font-size:9.0pt;line-height:115%'>='Can%', </span></span>which is good, but
SQL needs &quot;<span class=Code><span style='font-size:9.0pt;line-height:115%'>LIKE</span></span>&quot;
instead of <span class=Code><span style='font-size:9.0pt;line-height:115%'>&quot;=&quot;</span></span>
to evaluate a wildcard. So the next operation converts &quot;<span class=Code><span
style='font-size:9.0pt;line-height:115%'>CameraManufacturer = 'Can%</span></span>'
&quot;into &quot;<span class=Code><span style='font-size:9.0pt;line-height:
115%'>CameraManufacturer LIKE 'Can%'</span></span> &quot;:</p>

<p class=MsoNormal><span class=CodeRed><span style='font-size:9.0pt;line-height:
115%'>$Filter</span></span><span class=Code><span style='font-size:9.0pt;
line-height:115%'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt;line-height:115%'>=</span></span><span class=Code><span
style='font-size:9.0pt;line-height:115%'> </span></span><span class=CodeRed><span
style='font-size:9.0pt;line-height:115%'>$Filter</span></span><span class=Code><span
style='font-size:9.0pt;line-height:115%'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt;line-height:
115%'>-replace</span></span><span class=Code><span style='font-size:9.0pt;
line-height:115%'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt;line-height:115%'>&quot;\s*=\s*(?='.+%'\s*$)&quot;</span></span><span
class=Code><span style='font-size:9.0pt;line-height:115%'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt;line-height:
115%'>,</span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt;line-height:115%'>&quot; LIKE &quot;</span></span><span
class=Code><span style='font-size:9.0pt;line-height:115%'> </span></span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Regular expression</p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Meaning</p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Application </p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'><b><u>\s*=\s*</u></b>(?='.+%'\s*$)</p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>= sign surrounded by any spaces </p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>CameraManufacturer<b><u> = </u></b>'Can%'</p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>\s*=\s*(?=<b><u>'</u></b>.+%'\s*$)</p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>A quote character </p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>CameraManufacturer = <b><u>'</u></b>Can%'</p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>\s*=\s*(?='<b><u>.+</u></b>%'\s*$)</p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Any characters (at least one)</p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>CameraManufacturer = '<b><u>Can</u></b>%'</p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>\s*=\s*(?='.+<b><u>%'</u></b>\s*$)</p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>% character followed by ' </p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>CameraManufacturer = 'Can<b><u>%'</u></b></p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>\s*=\s*(?='.+%'<b><u>\s*$</u></b>)</p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Any spaces (or none) followed by end of line</p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><i>&nbsp;</i></p>
  </td>
 </tr>
 <tr>
  <td width=178 valign=top style='width:118.8pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>\s*=\s*<b><u>(?=</u></b>'.+%'\s*$<b><u>)</u></b></p>
  </td>
  <td width=276 valign=top style='width:184.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Look ahead for the enclosed expression but don't include it in the
  match</p>
  </td>
  <td width=239 valign=top style='width:159.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>$Matches[0] = &quot;=&quot; <br>
  (but only if 'Can%' is present)</p>
  </td>
 </tr>
</table>

<h2>Provide Aliases</h2>

<p class=MsoNormal>The steps above reconstruct &quot;<span class=Code><span
style='font-size:9.0pt;line-height:115%'>WHERE</span></span>&quot; terms to
build syntactically correct SQL, but what if I get confused and enter <span
class=Code><span style='font-size:9.0pt;line-height:115%'>CameraMaker</span></span>
instead of <span class=Code><span style='font-size:9.0pt;line-height:115%'>CameraManufacturer</span></span>
or <span class=Code><span style='font-size:9.0pt;line-height:115%'>Keyword</span></span>
instead of <span class=Code><span style='font-size:9.0pt;line-height:115%'>Keyword<u>s</u></span></span>?
I need <i>Aliases</i> – and they should work anywhere in the SQL statement - not
just in the &quot;<span class=Code><span style='font-size:9.0pt;line-height:
115%'>WHERE</span></span>&quot; clause but in &quot;<span class=Code><span
style='font-size:9.0pt;line-height:115%'>ORDER BY</span></span>&quot; as well</p>

<p class=MsoNormal>I defined a hash table (a.k.a. a &quot;dictionary&quot;, or
an &quot;associative array&quot;) near the top of the script to act as a single
place to store the aliases with their associated full canonical names, like
this:</p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$PropertyAliases</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> @{Width</span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;System.Image.HorizontalSize&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>                    Height</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.Image.VerticalSize&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>                      Name</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.FileName&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>                 Extension</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.FileExtension&quot;;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>                   Keyword</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.Keywords&quot;;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>               </span></span><span
class=Code><span style='font-size:9.0pt'>CameraMake</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>r=&quot;System.Photo.CameraManufacturer
</span></span><span class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Later in the script, once the SQL statement is built, a loop
runs through the aliases replacing each with its canonical name:</p>

<p class=CodeBlock><span class=CodeRed><span style='font-size:9.0pt'>$PropertyAliases</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Keys </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>|</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>ForEach-Object</span></span><span class=Code><span
style='font-size:9.0pt'> {<br>
</span></span><span class=CodeRed><span style='font-size:9.0pt'>       $SQL</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-replace</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;(?&lt;=\s)$($_)(?=\s*(=|&gt;|&lt;|,|Like))&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$PropertyAliases</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$_</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>A hash table has .<i>Keys</i> and .<i>Values</i> properties
which return what is on the left and right of the equals signs respectively. <span
class=Code><span style='font-size:9.0pt;line-height:115%'>$hashTable.keyName</span></span>
or <span class=Code><span style='font-size:9.0pt;line-height:115%'>$hashtable[keyName]</span></span>
will return the value, so <span class=Code><span style='font-size:9.0pt;
line-height:115%'>$_</span></span> will start by taking the value &quot;<span
class=Code><span style='font-size:9.0pt;line-height:115%'>width</span></span>&quot;,
and its replacement will be <span class=Code><span style='font-size:9.0pt;
line-height:115%'>$PropertyAliases[&quot;width&quot;] </span></span>which is &quot;<span
class=Code><span style='font-size:9.0pt;line-height:115%'>System.Image.HorizontalSize</span></span>&quot;,
on the next pass through the loop, <span class=Code><span style='font-size:
9.0pt;line-height:115%'>&quot;height&quot;</span></span> is replaced and so on.
To ensure it matches on a field name and not text being searched for, the
regular expression stipulates the name must be preceded by a space and followed
by &quot;<span class=Code><span style='font-size:9.0pt;line-height:115%'>=</span></span>&quot;or
&quot;<span class=Code><span style='font-size:9.0pt;line-height:115%'>like</span></span>&quot;
and so on. </p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'><b>Regular expression</b></p>
  </td>
  <td width=235 valign=top style='width:156.85pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'><b>Meaning</b></p>
  </td>
  <td width=209 valign=top style='width:139.1pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'><b>Application </b></p>
  </td>
 </tr>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>(?&lt;=\s)<b><u>Width</u></b>(?=\s*(=|&gt;|&lt;|,|Like))</p>
  </td>
  <td width=235 valign=top style='width:156.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>The literal text &quot;Width&quot;</p>
  </td>
  <td width=209 valign=top style='width:139.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>  <b><u>Width</u></b> &gt; 1024</p>
  </td>
 </tr>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>(?&lt;=<b><u>\s</u></b>)Width(?=\s*(=|&gt;|&lt;|,|Like))</p>
  </td>
  <td width=235 valign=top style='width:156.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>A Space</p>
  </td>
  <td width=209 valign=top style='width:139.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><b><i>&nbsp;</i></b></p>
  </td>
 </tr>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'><b><u>(?&lt;=</u></b>\s<b>)</b>Width(?=\s*(=|&gt;|&lt;|,|Like))</p>
  </td>
  <td width=235 valign=top style='width:156.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Look behind for the enclosed expression but don't include it in the
  match</p>
  </td>
  <td width=209 valign=top style='width:139.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>$Matches[0] = &quot;Width&quot; <br>
  (but only if a leading space is present)</p>
  </td>
 </tr>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>(?&lt;=\s)Width(?=<b><u>\s*</u></b>(=|&gt;|&lt;|,|Like))</p>
  </td>
  <td width=235 valign=top style='width:156.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>any spaces (or none)</p>
  </td>
  <td width=209 valign=top style='width:139.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'><i>&nbsp;</i></p>
  </td>
 </tr>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>(?&lt;=\s)Width(?=\s*<b><u>(=|&gt;|&lt;|,|Like)</u></b>)</p>
  </td>
  <td width=235 valign=top style='width:156.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>The literal text &quot;Like&quot;, or any of the characters comma,
  equals, greater than or less than</p>
  </td>
  <td width=209 valign=top style='width:139.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>  Width <b><u>&gt;</u></b> 1024</p>
  </td>
 </tr>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>(?&lt;=\s)Width<b><u>(?=</u></b>\s*(=|&gt;|&lt;|,|Like)<b><u>)</u></b></p>
  </td>
  <td width=235 valign=top style='width:156.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Look ahead for the enclosed expression but don't include it in the
  match</p>
  </td>
  <td width=209 valign=top style='width:139.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>$Matches[0] = &quot;Width&quot; <br>
  (but only if &quot; &gt;&quot; is present)</p>
  </td>
 </tr>
</table>

<h2>If the prefix is omitted put the correct one in.</h2>

<p class=MsoNormal>This builds on the ideas we've seen already. I want the list
of fields and prefixes to be easy to maintain, so just after I define my
aliases I define a list of field types</p>

<p class=CodeBlock><span class=CodeRed><span style='font-size:9.0pt'>$FieldTypes</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Photo&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Image&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Music&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Media&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;RecordedTv&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Search&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='page-break-after:auto'>&nbsp;</p>

<p class=CodeBlock>For each type I define two variables, a <span
class=CodeItalic><span style='font-size:9.0pt'>prefix</span></span> and a <span
class=CodeItalic><span style='font-size:9.0pt'>fieldslist</span></span> : the
names must be <span class=CodeItalic><span style='font-size:9.0pt'>Fieldtype</span></span>PREFIX
and <span class=CodeItalic><span style='font-size:9.0pt'>FieldType</span></span>FIELDS
– the reason for this will become clear shortly but here is what they look like</p>

<p class=CodeBlock><span class=CodeRed><span style='font-size:9.0pt'>$SystemPrefix</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.&quot;</span></span></p>

<p class=CodeBlock><span class=CodeRed><span style='font-size:9.0pt'>$SystemFields</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;ItemName|ItemUrl&quot;</span></span></p>

<p class=CodeBlock><span class=CodeRed><span style='font-size:9.0pt'>$PhotoPrefix</span></span><span
class=Code><span style='font-size:9.0pt'>  </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.Photo.&quot;</span></span><span
class=Code><span style='font-size:9.0pt'><br>
</span></span><span class=CodeRed><span style='font-size:9.0pt'>$PhotoFields </span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>= </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;cameramodel|cameramanufacturer|orientation&quot;</span></span></p>

<p class=CodeBlock style='page-break-after:auto'>&nbsp;</p>

<p class=CodeBlock>In practice the field lists are much longer – system
contains 25 fieldnames not just the two shown here. The lists are written with
&quot;|&quot; between the names so they become a regular expression meaning<i>
&quot;ItemName or ItemUrl Or …&quot;.</i> The following code runs after aliases
have been processed </p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>foreach</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$type</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>in</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$FieldTypes</span></span><span class=Code><span
style='font-size:9.0pt'>) { </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$fields</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> (</span></span><span class=CodeBlue><span style='font-size:9.0pt'>get-variable</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;$($type)Fields&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>value </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$prefix</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> (</span></span><span class=CodeBlue><span style='font-size:9.0pt'>get-variable</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;$($type)Prefix&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>value </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$sql</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeRed><span style='font-size:9.0pt'>$sql</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-replace</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;(?&lt;=\s)(?=($Fields)\s*(=|&gt;|&lt;|,|Like))&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Prefix</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'> }</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>I can save repeating code by using <span class=Code><span
style='font-size:9.0pt;line-height:115%'>Get-Variable</span></span> in a loop
to get <span class=Code><span style='font-size:9.0pt;line-height:115%'>$<u>system</u>Fields</span></span>,
<span class=Code><span style='font-size:9.0pt;line-height:115%'>$<u>photo</u>Fields</span></span>
and so on, and if I want to add one more field, or a whole type I only need to
change the variable declarations at the start of the script. The regular
expression in the replace works like this:</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'><b>Regular expression</b></p>
  </td>
  <td width=227 valign=top style='width:151.1pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'><b>Meaning</b></p>
  </td>
  <td width=217 valign=top style='width:144.85pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'><b>Application </b></p>
  </td>
 </tr>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'><b><u>(?&lt;=\s)</u></b>(?=(cameramanufacturer|<br>
  orientation)\s*(=|&gt;|&lt;|,|Like))&quot;</p>
  </td>
  <td width=227 valign=top style='width:151.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Look behind for a space but don't include it in the match</p>
  </td>
  <td width=217 valign=top style='width:144.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>(?&lt;=\s)(?=(<b><u>cameramanufacturer|<br>
  orientation</u></b>)\s*(=|&gt;|&lt;|,|Like))&quot;</p>
  </td>
  <td width=227 valign=top style='width:151.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>The literal text &quot;orientation&quot;  or
  &quot;cameramanufacturer&quot; </p>
  </td>
  <td width=217 valign=top style='width:144.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'> <b><u>CameraManufacturer</u></b> LIKE 'Can%'</p>
  </td>
 </tr>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>(?&lt;=\s)(?=(cameramanufacturer|<br>
  orientation)<b><u>\s*</u></b>(=|&gt;|&lt;|,|Like))&quot;</p>
  </td>
  <td width=227 valign=top style='width:151.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>any spaces (or none)</p>
  </td>
  <td width=217 valign=top style='width:144.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal;text-autospace:none'>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>(?&lt;=\s)(?=(cameramanufacturer|<br>
  orientation)\s*<b><u>(=|&gt;|&lt;|,|Like)</u></b>)&quot;</p>
  </td>
  <td width=227 valign=top style='width:151.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>The literal text &quot;Like&quot;, or any of the characters comma,
  equals, greater than or less than</p>
  </td>
  <td width=217 valign=top style='width:144.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'> CameraManufacturer <b><u>LIKE</u></b> 'Can%'</p>
  </td>
 </tr>
 <tr>
  <td width=249 valign=top style='width:166.15pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>(?&lt;=\s)<b><u>(?=</u></b>(cameramanufacturer|<br>
  orientation)\s*(=|&gt;|&lt;|,|Like)<b><u>)</u></b>&quot;</p>
  </td>
  <td width=227 valign=top style='width:151.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>Look ahead for the enclosed expression but don't include it in the
  match</p>
  </td>
  <td width=217 valign=top style='width:144.85pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
  normal'>$match[0] is the point between the leading space and &quot;CameraManufacturer
  LIKE&quot; but doesn't include either.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal><b>We get the effect of an &quot;insert&quot; operator by
using </b><span class=CodeBold><span style='font-size:9.0pt;line-height:115%'>&#8209;replace
</span></span><b>with a regular expression that finds a place in the text but
doesn't select any of it.</b></p>

<p class=MsoNormal>This part of the function allows &quot;<span class=Code><span
style='font-size:9.0pt;line-height:115%'>CameraManufacturer LIKE 'Can%'</span></span>&quot;
to become &quot;<span class=Code><span style='font-size:9.0pt;line-height:115%'>System.Photo
CameraManufacturer LIKE 'Can%'</span></span> &quot; in a <span class=Code><span
style='font-size:9.0pt;line-height:115%'>WHERE</span></span> clause. I also
wanted &quot;<span class=Code><span style='font-size:9.0pt;line-height:115%'>CameraManufacturer</span></span>&quot;
in an <span class=Code><span style='font-size:9.0pt;line-height:115%'>ORDER BY</span></span>
clause to become &quot;<span class=Code><span style='font-size:9.0pt;
line-height:115%'>System.Photo CameraManufacturer</span></span>&quot;. Very
sharp-eyed readers may have noticed that I look for a Comma after the fieldname
as well as &lt;,&gt;,=, and LIKE. I modified the code which appeared in part
one so that when an <span class=Code><span style='font-size:9.0pt;line-height:
115%'>ORDER BY</span></span> clause is inserted it is followed by a trailing comma
like this: </p>

<p class=CodeBlock><span class=CodeCustomColorRGB00139><span style='font-size:
9.0pt'>if</span></span><span class=Code><span style='font-size:9.0pt'> (</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$orderby</span></span><span
class=Code><span style='font-size:9.0pt'>) { </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$sql</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; ORDER BY &quot;</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+</span></span><span class=Code><span style='font-size:
9.0pt'> (</span></span><span class=CodeRed><span style='font-size:9.0pt'>$OrderBy</span></span><span
class=Code><span style='font-size:9.0pt'>   </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-join</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot; , &quot;</span></span><span
class=Code><span style='font-size:9.0pt'> ) </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>+</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;,&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>} </span></span></p>

<p class=MsoNormal>the new version will work with this regular expression but the
extra comma will cause a SQL error and so it must be removed later. <br>
When I introduced the SQL I said the <span class=Code><span style='font-size:
9.0pt;line-height:115%'>SELECT </span></span>statement looks like this:</p>

<p class=MsoNormal><span class=Code><span style='font-size:9.0pt;line-height:
115%'>SELECT System.ItemName, System.ItemUrl, System.FileExtension,
System.FileName, System.FileAttributes, System.FileOwner, System.ItemType,
System.ItemTypeText , System.KindText, System.Kind, System.MIMEType,
System.Size</span></span></p>

<p class=MsoNormal>Building this clause from the field lists simplifies code
maintenance, and as a bonus anything declared in the field lists will be retrieved
by the query as well as accepted as input by its short name.  The <span
class=Code><span style='font-size:9.0pt;line-height:115%'>SELECT</span></span> clause
is prepared like this:</p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'> if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$First</span></span><span class=Code><span
style='font-size:9.0pt'>)  {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;SELECT TOP $First &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>else</span></span><span class=Code><span
style='font-size:9.0pt'>         {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;SELECT &quot;</span></span><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>foreach</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$type</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>in</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$FieldTypes</span></span><span class=Code><span
style='font-size:9.0pt'>) { </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> ((</span></span><span class=CodeBlue><span
style='font-size:9.0pt'>get-variable</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;$($type)Fields&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>value </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-replace</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\|&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;, &quot;</span></span><span
class=Code><span style='font-size:9.0pt'> ) </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>+</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;, &quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'> }</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>This replaces the &quot;|&quot; with a comma and puts a
comma after each set of fields. This means there is a comma between the last
field and the<span class=Code><span style='font-size:9.0pt;line-height:115%'>
FROM</span></span> – which allows the regular expression to recognise field
names, but it will break the SQL , so it is removed after the prefixes have
been inserted (just like the one for <span class=Code><span style='font-size:
9.0pt;line-height:115%'>ORDER BY</span></span>).</p>

<p class=MsoNormal>This might <i>seem</i> inefficient, but when I checked the
time it took to run the function and get the results but not output them it was
typically about 0.05 seconds (50ms) on my laptop – it takes more time to output
the results. </p>

<p class=MsoNormal>Combining all the bits in this part with the bits in part
one turns my 36 line function into about a 60 line one as follows</p>

<p class=CodeBlock><span class=CodeCustomColorRGB00139><span style='font-size:
9.0pt'>Function</span></span><span class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13843226><span style='font-size:9.0pt'>Get-IndexedItem</span></span><span
class=Code><span style='font-size:9.0pt'>{</span></span></p>

<p class=CodeBlock><span class=CodeCustomColorRGB00139><span style='font-size:
9.0pt'>Param</span></span><span class=Code><span style='font-size:9.0pt'> ( </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeCustomColorRGB173216230><span style='font-size:9.0pt'>Alias</span></span><span
class=Code><span style='font-size:9.0pt'>(</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Where&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Include&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=CodeTeal><span style='font-size:9.0pt'>[String[]]</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Filter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>        </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeCustomColorRGB173216230><span style='font-size:9.0pt'>Alias</span></span><span
class=Code><span style='font-size:9.0pt'>(</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Sort&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=CodeTeal><span style='font-size:9.0pt'>[String[]]</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$OrderBy</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>        </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeCustomColorRGB173216230><span style='font-size:9.0pt'>Alias</span></span><span
class=Code><span style='font-size:9.0pt'>(</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Top&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=CodeTeal><span style='font-size:9.0pt'>[String[]]</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$First</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>        </span></span><span
class=CodeTeal><span style='font-size:9.0pt'>[String]</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Path</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>        </span></span><span
class=CodeTeal><span style='font-size:9.0pt'>[Switch]</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Recurse</span></span><span
class=Code><span style='font-size:9.0pt'> )</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>        </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$PropertyAliases</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> @{Width </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.Image.HorizontalSize&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>                         
Height </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;System.Image.VerticalSize&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$FieldTypes</span></span><span
class=Code><span style='font-size:9.0pt'>   </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Photo&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$PhotoPrefix</span></span><span
class=Code><span style='font-size:9.0pt'>  </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.Photo.&quot;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$PhotoFields</span></span><span
class=Code><span style='font-size:9.0pt'>  </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;cameramodel|cameramanufacturer|orientation&quot;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SystemPrefix</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.&quot;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SystemFields</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;ItemName|ItemUrl|FileExtension|FileName&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$First</span></span><span class=Code><span
style='font-size:9.0pt'>)  {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;SELECT TOP $First &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>else</span></span><span
class=Code><span style='font-size:9.0pt'>         {</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;SELECT &quot;</span></span><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>foreach</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$type</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>in</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$FieldTypes</span></span><span class=Code><span
style='font-size:9.0pt'>) { </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>        </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> ((</span></span><span class=CodeBlue><span
style='font-size:9.0pt'>get-variable</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;$($type)Fields&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>value </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-replace</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\|&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;, &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>+</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;, &quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    }</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-match</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;\\\\([^\\]+)\\.&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>) {</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>           </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; FROM $($matches[1]).SYSTEMINDEX WHERE &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>  </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    } </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>else</span></span><span
class=Code><span style='font-size:9.0pt'> {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; FROM SYSTEMINDEX WHERE &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>} </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Filter</span></span><span class=Code><span
style='font-size:9.0pt'>) {</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>         </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Filter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Filter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-replace</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;\*&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;%&quot;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>         </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Filter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Filter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-replace</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\s*(=|&lt;|&gt;|like)\s*([^'\d][^\s']*)$&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>                                  
</span></span><span class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>'
$1 ''$2'' '</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>         </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Filter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Filter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-replace</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;\s*=\s*(?='.+%'\s*$)&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot; LIKE &quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>         </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Filter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Filter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>|</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeBlue><span style='font-size:9.0pt'>ForEach-Object</span></span><span
class=Code><span style='font-size:9.0pt'> {</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>             </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$_</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-match</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;'|=|&lt;|&gt;|like|contains|freetext&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>) {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$_</span></span><span class=Code><span
style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>                                   
</span></span><span class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>else</span></span><span
class=Code><span style='font-size:9.0pt'> {</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Contains(*,'$_')&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>         }) </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>         </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Filter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-join</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; AND &quot;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    } </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'>) {</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>         </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-notmatch</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;\w{4}:&quot;</span></span><span class=Code><span
style='font-size:9.0pt'>)  {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;file:&quot;</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeRed><span style='font-size:9.0pt'>$Path</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>               
</span></span><span class=CodeRed><span style='font-size:9.0pt'>$Path</span></span><span
class=Code><span style='font-size:9.0pt'>  </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Path</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-replace</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;\\&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;/&quot;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>               
</span></span><span class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-notmatch</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;WHERE\s$&quot;</span></span><span class=Code><span
style='font-size:9.0pt'>) {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; AND &quot;</span></span><span class=Code><span
style='font-size:9.0pt'> }</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>               
</span></span><span class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Recurse</span></span><span class=Code><span
style='font-size:9.0pt'>)                  {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; SCOPE = '$Path' &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>               
</span></span><span class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>else</span></span><span
class=Code><span style='font-size:9.0pt'>                           {</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; DIRECTORY = '$Path' &quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    } </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-match</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;WHERE\s*$&quot;</span></span><span class=Code><span
style='font-size:9.0pt'>) {</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>         </span></span><span
class=CodeBlue><span style='font-size:9.0pt'>Write-warning</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;You need to
specify either a path , or a filter.&quot;</span></span><span class=Code><span
style='font-size:9.0pt'> ; </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>return</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    }</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$OrderBy</span></span><span class=Code><span
style='font-size:9.0pt'>) { </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+=</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot; ORDER BY &quot;</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>+</span></span><span class=Code><span style='font-size:
9.0pt'> (</span></span><span class=CodeRed><span style='font-size:9.0pt'>$OrderBy</span></span><span
class=Code><span style='font-size:9.0pt'>   </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-join</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot; , &quot;</span></span><span
class=Code><span style='font-size:9.0pt'> ) </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>+</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;,&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$PropertyAliases</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Keys </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>|</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>ForEach-Object</span></span><span class=Code><span
style='font-size:9.0pt'> { </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>         </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>-replace</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;(?&lt;=\s)$($_)(?=\s*(=|&gt;|&lt;|,|Like))&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,<br>
                              </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$PropertyAliases</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$_</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    }</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>foreach</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$type</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>in</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$FieldTypes</span></span><span class=Code><span
style='font-size:9.0pt'>) { </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>        </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$fields</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeBlue><span
style='font-size:9.0pt'>get-variable</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;$($type)Fields&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>value </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>        </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$prefix</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeBlue><span
style='font-size:9.0pt'>get-variable</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;$($type)Prefix&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>value </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>        </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-replace</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;(?&lt;=\s)(?=($Fields)\s*(=|&gt;|&lt;|,|Like))&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Prefix</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>     }</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-replace</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\s*,\s*FROM\s+&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot; FROM &quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeRed><span style='font-size:9.0pt'>$SQL</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-replace</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\s*,\s*$&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>       </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>&nbsp;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Provider</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Provider=Search.CollatorDSO;&quot;+<br>
              &quot;Extended Properties=’Application=Windows’;&quot;</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Adapter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>new-object</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13843226><span
style='font-size:9.0pt'>system.data.oledb.oleDBDataadapter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-argument</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,<br>
          </span></span><span class=Code><span style='font-size:9.0pt'>     </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Provider</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$DS</span></span><span class=Code><span
style='font-size:9.0pt'>      </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>new-object</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13843226><span
style='font-size:9.0pt'>system.data.dataset</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$Adapter</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Fill(</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$DS</span></span><span class=Code><span
style='font-size:9.0pt'>)) { </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$DS</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Tables</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeViolet><span style='font-size:9.0pt'>0</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=Code><span style='font-size:9.0pt'> } </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<h1>Part three. Better function output </h1>

<p class=MsoNormal>In part one, I introduced a function which queries the
Windows Index using filter parameters like </p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>&quot;Contains(*,'Stingray')&quot;</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>&quot;System.Keywords = 'Portfolio' &quot;</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>&quot;System.Photo.CameraManufacturer LIKE 'CAN%' &quot;</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>&quot;System.image.horizontalSize &gt; 1024&quot;</p>

<p class=MsoNormal>In part two, I showed how these parameters could be
simplified to </p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Stingray (A word on its own becomes a <i>contains</i> term)</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Keyword=Portfolio (Keyword, without the S is an alias for
System.Keywords and quotes will be added automatically))</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>CameraManufacturer=CAN* (* will become %, and = will become LIKE,
quotes will be added and CameraManufacturer will be prefixed with System.Photo)</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Width &gt; 1024 (Width is an alias or
System.image.horizontalsize, and quotes are not added around numbers).</p>

<p class=MsoNormal>There is one remaining issue. PowerShell is designed so that
one command's output becomes another's input. This function isn't going to do
much with Piped input: I can't see another command spitting out search terms
for this one, nor can I multiple paths being piped in. But the majority of
items found by a search will be <i>files</i>: and so it should be possible to
treat them like files, piping them into <span class=Code><span
style='font-size:9.0pt;line-height:115%'>copy-item or</span></span> whatever. </p>

<p class=MsoNormal>The following was my first attempt at transforming the data
rows into something more helpful</p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$Provider</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Provider=Search.CollatorDSO;
Extended Properties=’Application=Windows’;&quot;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$adapter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeBlue><span style='font-size:9.0pt'>new-object</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13843226><span style='font-size:9.0pt'>system.data.oledb.oleDBDataadapter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-argument</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>, </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Provider</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=CodeRed><span
style='font-size:9.0pt'>$ds</span></span><span class=Code><span
style='font-size:9.0pt'>      </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>new-object</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13843226><span
style='font-size:9.0pt'>system.data.dataset</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>if</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$adapter</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Fill(</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$ds</span></span><span class=Code><span
style='font-size:9.0pt'>)) { </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>foreach</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$row</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>in</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$ds</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Tables</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeViolet><span style='font-size:9.0pt'>0</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=Code><span style='font-size:9.0pt'>)  {</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>if</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$row</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.ItemUrl&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-match</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;^file:&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>) <br>
      {</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>          </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$obj</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeBlue><span style='font-size:9.0pt'>New-Object</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13843226><span style='font-size:9.0pt'>psobject</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-Property</span></span><span
class=Code><span style='font-size:9.0pt'> @{<br>
          Path </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> ((</span></span><span class=CodeRed><span style='font-size:9.0pt'>$row</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.ItemUrl&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-replace</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;^file:&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>) </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-replace</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\/&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>      }</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>Else</span></span><span class=Code><span
style='font-size:9.0pt'> {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$obj</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeBlue><span style='font-size:9.0pt'>New-Object</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13843226><span style='font-size:9.0pt'>psobject</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-Property</span></span><span
class=Code><span style='font-size:9.0pt'> @{Path </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$row</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.ItemUrl&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}}</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>Add-Member</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-force</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-Input</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$obj</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-Name</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;ToString&quot;</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-MemberType</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;scriptmethod&quot;</span></span><span class=Code><span
style='font-size:9.0pt'> `</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>           </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-Value</span></span><span class=Code><span
style='font-size:9.0pt'> {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$this</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>path} </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>foreach</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$prop</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>in</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeBlue><span
style='font-size:9.0pt'>Get-Member</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-InputObject</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$row</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-MemberType</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13843226><span
style='font-size:9.0pt'>property</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>|</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>                       </span></span><span
class=CodeBlue><span style='font-size:9.0pt'>where-object</span></span><span
class=Code><span style='font-size:9.0pt'> {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$row</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;$($_.name)&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-isnot</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeTeal><span
style='font-size:9.0pt'>[system.dbnull]</span></span><span class=Code><span
style='font-size:9.0pt'> })) </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>      {</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>          </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>Add-Member</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-ErrorAction</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;SilentlyContinue&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-InputObject</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$obj</span></span><span class=Code><span
style='font-size:9.0pt'> `</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>             </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-MemberType</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13843226><span
style='font-size:9.0pt'>NoteProperty</span></span><span class=Code><span
style='font-size:9.0pt'>  </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-Name</span></span><span class=Code><span
style='font-size:9.0pt'> ((</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$prop</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>name </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-split</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\.&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> )</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeViolet><span style='font-size:9.0pt'>-1</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=Code><span style='font-size:9.0pt'>) `</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>             </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-Value</span></span><span class=Code><span
style='font-size:9.0pt'>  </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$row</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;$($prop.name)&quot;</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>      }</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>foreach</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$prop</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>in</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$PropertyAliases</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Keys </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>|</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>          </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>Where-Object</span></span><span class=Code><span
style='font-size:9.0pt'> {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$row</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;$($propertyAliases.$_)&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-isnot</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeTeal><span
style='font-size:9.0pt'>[system.dbnull]</span></span><span class=Code><span
style='font-size:9.0pt'> }))</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>      {</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>          </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>Add-Member</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-ErrorAction</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;SilentlyContinue&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-InputObject</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$obj</span></span><span class=Code><span
style='font-size:9.0pt'> `</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>             </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-MemberType</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13843226><span
style='font-size:9.0pt'>AliasProperty</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-Name</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$prop</span></span><span class=Code><span
style='font-size:9.0pt'> `</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>             </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-Value</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$propertyAliases</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$prop</span></span><span
class=Code><span style='font-size:9.0pt'>  </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-split</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\.&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> )</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeViolet><span style='font-size:9.0pt'>-1</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>      }</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>    </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$obj</span></span></p>

<p class=CodeBlock style='line-height:12.0pt'><span class=Code><span
style='font-size:9.0pt'>}}</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>This is where the function spends most of its time, looping
through the data creating a custom object for each row; non-file items are
given a path property which holds the<span class=Code><span style='font-size:
9.0pt;line-height:115%'> System.ItemURL</span></span> property; for files the I<span
class=Code><span style='font-size:9.0pt;line-height:115%'>temUrl</span></span>
is processed into normal format (rather than <span class=Code><span
style='font-size:9.0pt;line-height:115%'>file:c/users/james</span></span>
format) – <b>in many cases the item can be piped into another command successfully
if it just has a <i>Path</i> property.</b> </p>

<p class=MsoNormal>Then, for each property (database column) in the row a
member is added to the custom object with a shortened version of the property name
and the value (assuming the column isn't empty). <br>
Next, alias properties are added using the definitions in <span class=Code><span
style='font-size:9.0pt;line-height:115%'>$PropertyAliases.</span></span> <br>
Finally some standard members get added. In this version I've pared it down to
a single method, because <b>several things expect to be able to get the path
for a file by calling its tostring()</b> method. </p>

<p class=MsoNormal>When I had all of this working I tried to get clever. I
added aliases for all the properties which normally appear on a <span
class=Code><span style='font-size:9.0pt;line-height:115%'>System.IO.FileInfo</span></span>
object and even tried fooling PowerShell's formatting system into treating my
file items as a file object, something that only needs one extra line of code</p>

<p class=MsoNormal><span class=CodeRed><span style='font-size:9.0pt;line-height:
115%'>$Obj</span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt;line-height:115%'>.</span></span><span class=Code><span
style='font-size:9.0pt;line-height:115%'>psobject</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt;line-height:
115%'>.</span></span><span class=Code><span style='font-size:9.0pt;line-height:
115%'>typenames</span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt;line-height:115%'>.</span></span><span class=Code><span
style='font-size:9.0pt;line-height:115%'>insert(</span></span><span
class=CodeViolet><span style='font-size:9.0pt;line-height:115%'>0</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt;line-height:
115%'>,</span></span><span class=Code><span style='font-size:9.0pt;line-height:
115%'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt;line-height:115%'>&quot;SYSTEM.IO.FILEINFO&quot;</span></span><span
class=Code><span style='font-size:9.0pt;line-height:115%'>)</span></span></p>

<p class=MsoNormal>Pretending a custom object is actually another type seems
dangerous, but everything I tried seemed happy provided the right properties
were present. The formatting worked except for the &quot;<span class=Code><span
style='font-size:9.0pt;line-height:115%'>Mode</span></span>&quot; column. I
found the method which that calculates .<span class=Code><span
style='font-size:9.0pt;line-height:115%'>Mode </span></span>for <span
class=Code><span style='font-size:9.0pt;line-height:115%'>FILEINFO</span></span>
objects, but it needs a <i>real</i> <span class=Code><span style='font-size:
9.0pt;line-height:115%'>FILEINFO </span></span>object. It was easy enough to
get one – I had the path and it only needs a call to <span class=Code><span
style='font-size:9.0pt;line-height:115%'>Get&#8209;Item</span></span> but I
realized that if I was getting a <span class=Code><span style='font-size:9.0pt;
line-height:115%'>FILEINFO</span></span> object anywhere in the process, then it
made more sense to add extra properties to that object and dispense with the
custom object.  I added an extra switch<span class=Code><span style='font-size:
9.0pt;line-height:115%'> -NoFiles</span></span> to supress this behaviour <br>
So the code then became</p>

<p class=CodeBlock><span class=CodeRed><span style='font-size:9.0pt'>$Provider</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;Provider=Search.CollatorDSO;
Extended Properties=’Application=Windows’;&quot;</span></span></p>

<p class=CodeBlock><span class=CodeRed><span style='font-size:9.0pt'>$adapter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>new-object</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13843226><span
style='font-size:9.0pt'>system.data.oledb.oleDBDataadapter</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-argument</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$SQL</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>, </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$Provider</span></span></p>

<p class=CodeBlock><span class=CodeRed><span style='font-size:9.0pt'>$ds</span></span><span
class=Code><span style='font-size:9.0pt'>      </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeBlue><span
style='font-size:9.0pt'>new-object</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13843226><span
style='font-size:9.0pt'>system.data.dataset</span></span></p>

<p class=CodeBlock><span class=CodeCustomColorRGB00139><span style='font-size:
9.0pt'>if</span></span><span class=Code><span style='font-size:9.0pt'> (</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$adapter</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Fill(</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$ds</span></span><span class=Code><span
style='font-size:9.0pt'>)) { </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>foreach</span></span><span class=Code><span
style='font-size:9.0pt'> (</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$row</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB00139><span
style='font-size:9.0pt'>in</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$ds</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>Tables</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>[</span></span><span
class=CodeViolet><span style='font-size:9.0pt'>0</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>]</span></span><span
class=Code><span style='font-size:9.0pt'>)  {</span></span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;text-autospace:none'><span style='font-size:9.0pt;font-family:"Lucida Console"'>  
 <span style='color:darkblue'>if</span> <span style='color:black'>((</span><span
style='color:orangered'>$row</span><span style='color:darkgray'>.</span><span
style='color:darkred'>&quot;System.ItemUrl&quot;</span> <span style='color:
darkgray'>-match</span> <span style='color:darkred'>&quot;^file:&quot;</span><span
style='color:black'>)</span> <span style='color:darkgray'>-and</span> <span
style='color:black'>(</span><span style='color:darkgray'>-not</span> <span
style='color:orangered'>$NoFiles</span><span style='color:black'>))</span> <span
style='color:black'>{</span> </span><span class=Code><span style='font-size:
9.0pt'><br>
      {</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>        </span></span><span
class=CodeRed><span style='font-size:9.0pt'>$obj</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeBlue><span style='font-size:9.0pt'>Get-item
</span></span><span class=CodeDarkBlue><span style='font-size:9.0pt'>-P</span></span><span
class=Code><span style='font-size:9.0pt'>ath ((</span></span><span
class=CodeRed><span style='font-size:9.0pt'>$row</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.ItemUrl&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-replace</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;^file:&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>) `<br>
                                 </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>-replace</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\/&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;\&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>      }</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeCustomColorRGB00139><span style='font-size:9.0pt'>Else</span></span><span
class=Code><span style='font-size:9.0pt'> {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$obj</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB169169169><span
style='font-size:9.0pt'>=</span></span><span class=Code><span style='font-size:
9.0pt'> </span></span><span class=CodeBlue><span style='font-size:9.0pt'>New-Object</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13843226><span style='font-size:9.0pt'>psobject</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-Property</span></span><span
class=Code><span style='font-size:9.0pt'> @{Path </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$row</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;System.ItemUrl&quot;</span></span><span
class=Code><span style='font-size:9.0pt'>}</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>          </span></span><span
class=CodeBlue><span style='font-size:9.0pt'>Add-Member</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-force</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-Input</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span class=CodeRed><span
style='font-size:9.0pt'>$obj</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-Name</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;ToString&quot;</span></span><span class=Code><span
style='font-size:9.0pt'> `</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>                    
</span></span><span class=CodeDarkBlue><span style='font-size:9.0pt'>-MemberType</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;scriptmethod&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-Value</span></span><span
class=Code><span style='font-size:9.0pt'> {</span></span><span class=CodeRed><span
style='font-size:9.0pt'>$this</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>path} </span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>         }</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>   ForEach
...</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The initial code was 36 lines, making the user input more
friendly took it to 60 lines, and the output added about another 35 lines,
bring the total to 95. </p>

<p class=MsoNormal>There were 4 other kinds of output I wanted to produce:</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>Help</b>. I added comment-based-help with plenty of examples.
It runs to 75 lines making it the biggest constituent in the finished product. In
addition I have 50 lines that are comments or blank for readability as
insurance against trying to understand what those regular expressions do in a
few months' time – but there are only 100 lines of actual code. </p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>A</b> <span class=CodeBold><span style='font-size:9.0pt;
line-height:115%'>–list</span></span> <b>switch</b> which lists the long and
short names for the fields (including aliases) </p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Support for the<span class=CodeBold><span style='font-size:9.0pt;
line-height:115%'> –Debug </span></span><b>switch</b> – because so many things
might go wrong, I have <span class=CodeBlue><span style='font-size:9.0pt;
line-height:115%'>write&#8209;debug</span></span><span class=Code><span
style='font-size:9.0pt;line-height:115%'> </span></span><span class=CodeRed><span
style='font-size:9.0pt;line-height:115%'>$SQL</span></span><span class=Code><span
style='font-size:9.0pt;line-height:115%'> </span></span>immediately before I
carry out the query, and to enable it that I have <span class=Code><span
style='font-size:9.0pt;line-height:115%'>[CmdletBinding()]</span></span> before
I declare the parameters. </p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b>A </b><span class=CodeBold><span style='font-size:9.0pt;
line-height:115%'>–Value</span></span><b> switch</b> which uses the <a
href="http://msdn.microsoft.com/en-us/library/bb231281(v=VS.85).aspx"><span
style='font-size:9.0pt;line-height:115%;font-family:"Lucida Console"'>GROUP ON…
OVER</span><span style='font-family:"Lucida Console"'>… </span> search syntax</a>
so I can see what the possible values are in a column. </p>

<p class=MsoNormal><span class=Code><span style='font-size:9.0pt;line-height:
115%'>GROUP ON</span></span> queries are unusual because they fill the dataset
with TWO tables.<br>
<span class=Code><span style='font-size:9.0pt;line-height:115%'>GROUP ON
System.kind OVER ( SELECT STATEMENT)</span></span> will produce a something
like this as the first table. </p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>SYSTEM.KIND         
           Chapter</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>-----------                    
-------</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>communication                        
0</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>document                             
1</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>email                                
2</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>folder                               
3</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>link                                 
4</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>music                                
5</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>picture                              
6</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>program                              
7</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>recordedtv                           
8</span></span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The second table is the normal data suitably sorted. In this
case it has all the requested fields grouped by kind plus one named &quot;<span
class=Code><span style='font-size:9.0pt;line-height:115%'>Chapter</span></span>&quot;,
which ties into the first table. I'm not really interested in the second table
but the first helps me know if I should enter <span class=Code><span
style='font-size:9.0pt;line-height:115%'>&quot;Kind=image&quot;,
&quot;Kind=Photo&quot;</span></span> or <span class=Code><span
style='font-size:9.0pt;line-height:115%'>&quot;Kind=Picture&quot;</span></span>
</p>

<p class=MsoNormal>I have a <span class=Code><span style='font-size:9.0pt;
line-height:115%'>Select-List</span></span> function which I use in my <a
href="http://psconfig.codeplex.com">configurator</a> and <a
href="http://pshyperv.codeplex.com/">Hyper-V library</a>, and with this I can
choose which recorded TV program to watch, first selecting by title, and then
if there is more than one episode, by episode. </p>

<p class=CodeBlock><span class=CodeRed><span style='font-size:9.0pt'>$t</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>=</span></span><span
class=Code><span style='font-size:9.0pt'>(</span></span><span class=CodeBlue><span
style='font-size:9.0pt'>Get-IndexedItem</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-Value</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;title&quot;</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-filter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;kind=recordedtv&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-recurse</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>|<br>
   </span></span><span class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeBlue><span style='font-size:9.0pt'>Select-List</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-Property</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13843226><span style='font-size:9.0pt'>title</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>.</span></span><span
class=Code><span style='font-size:9.0pt'>title</span></span></p>

<p class=CodeBlock><span class=Code><span style='font-size:9.0pt'>    </span></span><span
class=CodeBlue><span style='font-size:9.0pt'>start</span></span><span
class=Code><span style='font-size:9.0pt'> (</span></span><span class=CodeBlue><span
style='font-size:9.0pt'>Get-IndexedItem</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeDarkBlue><span
style='font-size:9.0pt'>-filter</span></span><span class=Code><span
style='font-size:9.0pt'> </span></span><span class=CodeCustomColorRGB13900><span
style='font-size:9.0pt'>&quot;kind=recordedtv&quot;</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13900><span style='font-size:9.0pt'>&quot;title='$t'&quot;</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-path</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>|<br>
   </span></span><span class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeBlue><span style='font-size:9.0pt'>Select-List</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeDarkBlue><span style='font-size:9.0pt'>-Property</span></span><span
class=Code><span style='font-size:9.0pt'> </span></span><span
class=CodeCustomColorRGB13843226><span style='font-size:9.0pt'>ORIGINALBROADCASTDATE</span></span><span
class=CodeCustomColorRGB169169169><span style='font-size:9.0pt'>,</span></span><span
class=CodeCustomColorRGB13843226><span style='font-size:9.0pt'>PROGRAMDESCRIPTION</span></span><span
class=Code><span style='font-size:9.0pt'>)</span></span></p>

<p class=MsoNormal>              </p>

<p class=MsoNormal>You can get the finished product from &lt;link&gt; </p>

<p class=MsoNormal> </p>

</div>

</body>

</html>
